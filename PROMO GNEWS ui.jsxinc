/* ---------------------------------------------------------------
> script main ui
--------------------------------------------------------------- */

//  linter settings:
//  jshint -W061
//  jscs:disable maximumLineLength

function PROMO_GNEWS_UI() {

/* jshint ignore:start */
  #include 'PROMO GNEWS src.jsxinc';
  #include 'PROMO GNEWS exp.jsxinc';
  #include 'PROMO GNEWS img.jsxinc';
/* jshint ignore:end */

  var GNEWS_RED = rgb(185, 20, 20);
  var GNEWS_BLK = rgb(20, 20, 20);
  var GNEWS_WTE = rgb(234, 234, 234);
  var tabColors = [];
  var labelColors = [];
  var grpNames = [];

  loadStaticPrefs();
  loadDefaultPrefs();
  try {

    var JSONFile = File(scriptPreferencesPath + '/preferences.json');
    getGPrefs(JSONFile);

  } catch (error) {}  
  // pushColors();

  var w = {};
  var aboutStr = 'PROMO GNEWS script ' + vStr + ' | Jean-Marc Billard';
  var wip = 'work in progress... Œ£(„Å£ ¬∞–î ¬∞;)„Å£';

  clearOutput();
  write(aboutStr);

  if (thisObj instanceof Panel) {
    w = thisObj;

  } else {
    w = new Window('palette', 'PROMO GNEWS', undefined);
  }

  w.spacing = 0;
  w.margins = 0;
  w.orientation = 'stack';

  /*

  ---------------------------------------------------------------
  > üìÅ tabs and groups
  ---------------------------------------------------------------

  */

  var mainGrp = w.add('group');
  mainGrp.alignment = 'center';
  mainGrp.orientation = 'stack';

  var menuGrp = mainGrp.add('group');
  menuGrp.alignment = 'center';
  
  for (i = 1; i < grpNames.length; i++) {
    
    eval(grpNames[i] + 'Grp = mainGrp.add(\'group\');');
    eval(grpNames[i] + 'Grp.alignment = \'center\';');
    eval(grpNames[i] + 'Grp.visible = false;');
  }

  var preferencesGrp = mainGrp.add('group');
  preferencesGrp.alignment = 'center';
  preferencesGrp.visible = false;

  var imgGrp = w.add('group');
  imgGrp.orientation = 'stack';

  var errImgGrp = w.add('group');
  errImgGrp.orientation = 'stack';
  errImgGrp.visible = false;

  var progImgGrp = w.add('group');
  progImgGrp.orientation = 'stack';
  progImgGrp.visible = false;

  var errTabGrp = mainGrp.add('group');
  errTabGrp.visible = false;

  var progressGrp = mainGrp.add('group');
  progressGrp.visible = false;

  var closeGrp = w.add('group');
  closeGrp.orientation = 'stack';
  closeGrp.visible = false;

  var prefGrp = w.add('group');
  prefGrp.orientation = 'stack';

  /*

  ---------------------------------------------------------------
  > images
  ---------------------------------------------------------------

  */

  var GNEWS_LOGO = imgGrp.add('image', undefined, GNEWS_LOGO_IMG);

  var errImgArray = [attImg1, attImg2, attImg3, attImg4, attImg5];
  var r = getRndInteger(0, errImgArray.length);

  var errImg = errImgGrp.add('image', undefined, errImgArray[r]);
  var progImg = progImgGrp.add('image', undefined, keepCalmIcon);

  /*

  ---------------------------------------------------------------
  > üìü main menu
  ---------------------------------------------------------------

  */

  var ctrlBtn = menuGrp.add('iconbutton', undefined, ctrlIcon, {style: 'toolbutton'});
  ctrlBtn.helpTip = 'null and controls';
  var animBtn = menuGrp.add('iconbutton', undefined, animIcon, {style: 'toolbutton'});
  animBtn.helpTip = 'animation';
  var fxBtn = menuGrp.add('iconbutton', undefined, fxIcon, {style: 'toolbutton'});
  fxBtn.helpTip = 'effects';
  var txtBtn = menuGrp.add('iconbutton', undefined, txtTitleIcon, {style: 'toolbutton'});
  txtBtn.helpTip = 'text case and line breaking';
  var palletBtn = menuGrp.add('iconbutton', undefined, paletteIcon, {style: 'toolbutton'});
  palletBtn.helpTip = 'color palette';
  var layerBtn = menuGrp.add('iconbutton', undefined, layerIcon, {style: 'toolbutton'});
  layerBtn.helpTip = 'rename and sequence layers';
  var toolBtn = menuGrp.add('iconbutton', undefined, toolsIcon, {style: 'toolbutton'});
  toolBtn.helpTip = 'rigs and tools';
  var projBtn = menuGrp.add('iconbutton', undefined, prjIcon, {style: 'toolbutton'});
  projBtn.helpTip = 'project organization';

  var appBtn = menuGrp.add('iconbutton', undefined, aeIcon, {style: 'toolbutton'});
  appBtn.helpTip = 'setup AE preferences and stuff';

  menuGrp.add('image', undefined, vSpacer);

  var linksBtn = menuGrp.add('iconbutton', undefined, linksIcon, {style: 'toolbutton'});
  linksBtn.helpTip = 'useful links';
  
  // preferences button
  var prefBtn = prefGrp.add('iconbutton', undefined, setIcon, {style: 'toolbutton'});
  prefBtn.helpTip = 'script preferences';

  
  /*

  ---------------------------------------------------------------
  > üïπÔ∏è ctrl tab
  ---------------------------------------------------------------

  */

  var trmProp = 'ADBE Transform Group';
  
  var ctrlSubGrp1 = ctrlGrp.add('group');
  ctrlSubGrp1.spacing = 2;
  var aniTogBtn = ctrlSubGrp1.add('iconbutton', undefined, aniTogIcon, {style: 'toolbutton', toggle: 1});
  aniTogBtn.helpTip = 'copy animation';
  var exprTogBtn = ctrlSubGrp1.add('iconbutton', undefined, exprTogIcon, {style: 'toolbutton', toggle: 1});
  exprTogBtn.helpTip = 'copy expressions';

  var nullShpBtn = ctrlGrp.add('iconbutton', undefined, shpNullIcon, {style: 'toolbutton'});
  nullShpBtn.helpTip = 'create parent null';

  ctrlGrp.add('image', undefined, vSpacer);

  var nullCShpBtn = ctrlGrp.add('iconbutton', undefined, nullCIcon, {style: 'toolbutton'});
  nullCShpBtn.helpTip = 'centered null';

  ctrlGrp.add('image', undefined, vSpacer);

  var hGrp = ctrlGrp.add('group');
  hGrp.orientation = 'column';
  hGrp.spacing = 0;
  var upHBtn = hGrp.add('iconbutton', undefined, upIcon, {style: 'toolbutton'});
  upHBtn.helpTip = 'select parent';
  var dwnHBtn = hGrp.add('iconbutton', undefined, downIcon, {style: 'toolbutton'});
  dwnHBtn.helpTip = 'select children';

  /*

  ---------------------------------------------------------------
  > üö∂ anim tab
  ---------------------------------------------------------------

  */

  var copyInfBtn = animationGrp.add('iconbutton', undefined, copyInfluenceIcon, {style: 'toolbutton'});
  copyInfBtn.helpTip = 'copy keyframe influence';

  var pasteInfBtn = animationGrp.add('iconbutton', undefined, pasteInfluenceIcon, {style: 'toolbutton'});
  pasteInfBtn.helpTip = 'paste keyframe influence';

  
  animationGrp.add('image', undefined, vSpacer);

  var animationSubGrp1 = animationGrp.add('group');
  animationSubGrp1.spacing = 2;
  var typeAnimBtn = animationSubGrp1.add('iconbutton', undefined, solTogIcon, {style: 'toolbutton'});
  typeAnimBtn.helpTip = 'typewriting animation';


  /*

  ---------------------------------------------------------------
  > üî• fx tab
  ---------------------------------------------------------------

  */

  var fxProp = 'ADBE Effect Parade';

  var shpAdjBtn = fxGrp.add('iconbutton', undefined, shpAdjIcon, {style: 'toolbutton'});
  shpAdjBtn.helpTip = 'adjustment layer';

  fxGrp.add('image', undefined, vSpacer);

  var cGrp = fxGrp.add('group');
  cGrp.spacing = 2;
  var curBtn = cGrp.add('iconbutton', undefined, curIcon, {style: 'toolbutton'});
  curBtn.helpTip = 'curves';
  var levBtn = cGrp.add('iconbutton', undefined, levIcon, {style: 'toolbutton'});
  levBtn.helpTip = 'levels';
  var lumBtn = cGrp.add('iconbutton', undefined, lumIcon, {style: 'toolbutton'});
  lumBtn.helpTip = 'lumetri color';

  fxGrp.add('image', undefined, hSpacer);

  var fxSubGrp1 = fxGrp.add('group');
  fxSubGrp1.spacing = 2;
  var gaublurBtn = fxSubGrp1.add('iconbutton', undefined, gaublurIcon, {style: 'toolbutton'});
  gaublurBtn.helpTip = 'gaussian blur';
  var comblurBtn = fxSubGrp1.add('iconbutton', undefined, comblurIcon, {style: 'toolbutton'});
  comblurBtn.helpTip = 'compound blur';
  var lensblurBtn = fxSubGrp1.add('iconbutton', undefined, lensblurIcon, {style: 'toolbutton'});
  lensblurBtn.helpTip = 'lens blur';

  fxGrp.add('image', undefined, hSpacer);

  var fxSubGrp2 = fxGrp.add('group');
  fxSubGrp2.spacing = 2;
  var fillBtn = fxSubGrp2.add('iconbutton', undefined, fillIcon, {style: 'toolbutton'});
  fillBtn.helpTip = 'fill';

  fxGrp.add('image', undefined, hSpacer);

  var fxSubGrp3 = fxGrp.add('group');
  fxSubGrp3.spacing = 2;
  var glassBtn = fxSubGrp3.add('iconbutton', undefined, glassIcon, {style: 'toolbutton'});
  glassBtn.helpTip = '3d glasses';

  fxGrp.add('image', undefined, hSpacer);

  var fxSubGrp4 = fxGrp.add('group');
  fxSubGrp4.spacing = 2;
  var fracBtn = fxSubGrp4.add('iconbutton', undefined, fracIcon, {style: 'toolbutton'});
  fracBtn.helpTip = 'fractal noise';
  var grainBtn = fxSubGrp4.add('iconbutton', undefined, grainIcon, {style: 'toolbutton'});
  grainBtn.helpTip = 'add grain';

  /*

  ---------------------------------------------------------------
  > txt tab
  ---------------------------------------------------------------

  */

  var txtProp = 'ADBE Text Properties';
  var txtDoc = 'ADBE Text Document';

  var textSubGrp1 = textGrp.add('group');
  textSubGrp1.spacing = 2;
  var txtUpperBtn = textSubGrp1.add('iconbutton', undefined, txtUpperIcon, {style: 'toolbutton'});
  txtUpperBtn.helpTip = 'set text layer to upper case';
  var txtLowerBtn = textSubGrp1.add('iconbutton', undefined, txtLowerIcon, {style: 'toolbutton'});
  txtLowerBtn.helpTip = 'set text layer to lower case';
  var txtTitleBtn = textSubGrp1.add('iconbutton', undefined, txtTitleIcon, {style: 'toolbutton'});
  txtTitleBtn.helpTip = 'set text layer to title case';
  
  textGrp.add('image', undefined, hSpacer);
  
  var textSubGrp2 = textGrp.add('group');
  textSubGrp2.spacing = 2;
  var txtCleanerBtn = textSubGrp2.add('iconbutton', undefined, txtCleanerIcon, {style: 'toolbutton'});
  txtCleanerBtn.helpTip = 'deletes consecutive spaces and line breaks';
  var txtColumnBtn = textSubGrp2.add('iconbutton', undefined, txtColumnsIcon, {style: 'toolbutton'});
  txtColumnBtn.helpTip = 'divides consecutive spaces in 2 columns';

  textGrp.add('image', undefined, vSpacer);

  var limitSld = textGrp.add('slider', undefined, 60, 5, 200);
  var limitTxt2 = textGrp.add('edittext', undefined, '60');
  limitTxt2.characters = 3;
  var limitTxt = textGrp.add('statictext', undefined, '60');
  limitTxt.characters = 3;
  setTxtColor(limitTxt, sTxtColor);

  /*

  ---------------------------------------------------------------
  > pallet tab
  ---------------------------------------------------------------

  */
  var redBtn = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  redBtn.size = [40, 15];
  setBtnColor(redBtn, GNEWS_RED);
  redBtn.onDraw = customDraw;
  redBtn.helpTip = 'R: 185\nG: 20\nB: 20\nHEX: #B91414';

  var blkBtn = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  blkBtn.size = [40, 15];
  setBtnColor(blkBtn, GNEWS_BLK);
  blkBtn.onDraw = customDraw;
  blkBtn.helpTip = 'R: 20\nG: 20\nB: 20\nHEX: #141414';

  var wteBtn = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  wteBtn.size = [40, 15];
  setBtnColor(wteBtn, GNEWS_WTE);
  wteBtn.onDraw = customDraw;
  wteBtn.helpTip = 'R: 234\nG: 234\nB: 234\nHEX: #EAEAEA';

  palletGrp.add('image', undefined, vSpacer);

  var gryBtn1 = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  gryBtn1.size = [40, 15];
  setBtnColor(gryBtn1, rgb(180, 180, 180));
  gryBtn1.onDraw = customDraw;
  gryBtn1.helpTip = 'R: 180\nG: 180\nB: 180\nHEX: #B4B4B4';

  var gryBtn2 = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  gryBtn2.size = [40, 15];
  setBtnColor(gryBtn2, rgb(110, 110, 110));
  gryBtn2.onDraw = customDraw;
  gryBtn2.helpTip = 'R: 110\nG: 110\nB: 110\nHEX: #6E6E6E';

  var gryBtn3 = palletGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  gryBtn3.size = [40, 15];
  setBtnColor(gryBtn3, rgb(54, 54, 54));
  gryBtn3.onDraw = customDraw;
  gryBtn3.helpTip = 'R: 54\nG: 54\nB: 54\nHEX: #363636';

  palletGrp.add('image', undefined, vSpacer);

  var shpPalletBtn = palletGrp.add('iconbutton', undefined, shpPalletIcon, {style: 'toolbutton'});
  shpPalletBtn.helpTip = 'shape layer pallet';

  var logoBtn = palletGrp.add('iconbutton', undefined, newsIcon, {style: 'toolbutton'});
  logoBtn.helpTip = 'GNEWS logo as shape layer';

  /*

  ---------------------------------------------------------------
  > üßª layer tab
  ---------------------------------------------------------------

  */

  var layersSubGrp1 = layersGrp.add('group');
  layersSubGrp1.spacing = 2;
  var ftgTogBtn = layersSubGrp1.add('iconbutton', undefined, ftgTogIcon, {style: 'toolbutton', toggle: 1});
  ftgTogBtn.helpTip = 'footage';
  var solTogBtn = layersSubGrp1.add('iconbutton', undefined, solTogIcon, {style: 'toolbutton', toggle: 1});
  ftgTogBtn.helpTip = 'footage';
  solTogBtn.helpTip = 'solids';
  var shpTogBtn = layersSubGrp1.add('iconbutton', undefined, shpTogIcon, {style: 'toolbutton', toggle: 1});
  shpTogBtn.helpTip = 'shape layers';
  var txtTogBtn = layersSubGrp1.add('iconbutton', undefined, txtTogIcon, {style: 'toolbutton', toggle: 1});
  txtTogBtn.helpTip = 'text layers';
  var camTogBtn = layersSubGrp1.add('iconbutton', undefined, camTogIcon, {style: 'toolbutton', toggle: 1});
  camTogBtn.helpTip = 'camera layers';
  var lgtTogBtn = layersSubGrp1.add('iconbutton', undefined, lgtTogIcon, {style: 'toolbutton', toggle: 1});
  lgtTogBtn.helpTip = 'light layers';

  var renameLayersBtn = layersGrp.add('iconbutton', undefined, chkIcon, {style: 'toolbutton'});
  renameLayersBtn.helpTip = 'update layer names';

  layersGrp.add('image', undefined, vSpacer);

  var isolateBtn = layersGrp.add('iconbutton', undefined, isolateIcon, {style: 'toolbutton'});
  isolateBtn.helpTip = 'isolate layers';
  var lockTrmBtn = layersGrp.add('iconbutton', undefined, lockPropIcon, {style: 'toolbutton'});
  lockTrmBtn.helpTip = 'lock transform properties';

  /*

  ---------------------------------------------------------------
  > üî® tools tab
  ---------------------------------------------------------------

  */

  var arrowBtn = toolsGrp.add('iconbutton', undefined, arrowIcon, {style: 'toolbutton'});
  arrowBtn.helpTip = 'simple arrow rig';
  
  toolsGrp.add('image', undefined, vSpacer);
  
  var counterBtn = toolsGrp.add('iconbutton', undefined, counterIcon, {style: 'toolbutton'});
  counterBtn.helpTip = 'make counter rig';

  toolsGrp.add('image', undefined, vSpacer);

  var wigBtn = toolsGrp.add('iconbutton', undefined, wigIcon, {style: 'toolbutton'});
  wigBtn.helpTip = 'wig rig';

  toolsGrp.add('image', undefined, vSpacer);

  var ikBtn = toolsGrp.add('iconbutton', undefined, ikIcon, {style: 'toolbutton'});
  ikBtn.helpTip = 'simple ik rig';


  /*

  ---------------------------------------------------------------
  > üóÉÔ∏è project tab
  ---------------------------------------------------------------

  */

  var projUserTxt = projectGrp.add('edittext', undefined, userPrefix);
  projUserTxt.characters = 3;
  projUserTxt.helpTip = 'user id';
  var projIdTxt = projectGrp.add('edittext', undefined, 'proj id');
  projIdTxt.characters = 8;
  projIdTxt.helpTip = 'project id';
  var insertUserIdBtn = projectGrp.add('iconbutton', undefined, addIcon, {style: 'toolbutton'});
  insertUserIdBtn.helpTip = 'insert user with project ID';

  var projNameTxt = projectGrp.add('edittext', undefined, 'proj name');
  projNameTxt.characters = 16;
  projNameTxt.helpTip = 'project name';
  var renameItemBtn = projectGrp.add('iconbutton', undefined, chkIcon, {style: 'toolbutton'});
  renameItemBtn.helpTip = 'quick template rename';

  projectGrp.add('image', undefined, vSpacer);

  var projOrgBtn = projectGrp.add('iconbutton', undefined, orgProjIcon, {style: 'toolbutton'});
  projOrgBtn.helpTip = 'quick project organization';

  projectGrp.add('image', undefined, vSpacer);

  var projectSubGrp1 = projectGrp.add('group');
  projectSubGrp1.spacing = 2;
  var collectTogBtn = projectSubGrp1.add('iconbutton', undefined, fldTogIcon, {style: 'toolbutton', toggle: 1});
  collectTogBtn.helpTip = 'collect files';
  var collectFontsTogBtn = projectSubGrp1.add('iconbutton', undefined, txtTogIcon, {style: 'toolbutton', toggle: 1});
  collectFontsTogBtn.helpTip = 'collect fonts';

  var saveBtn = projectGrp.add('iconbutton', undefined, quickSaveIcon, {style: 'toolbutton'});
  saveBtn.helpTip = 'quick project save';

  /*

  ---------------------------------------------------------------
  > ‚úåÔ∏è app tab
  ---------------------------------------------------------------

  */

  var copyAMEPresetsBtn = appGrp.add('iconbutton', undefined, eprIcon, {style: 'toolbutton'});
  copyAMEPresetsBtn.helpTip = 'install Media Encoder presets';

  /*
  
  ---------------------------------------------------------------
  > üîó links tab
  ---------------------------------------------------------------
  
  */

  var linksSubGrp2 = linksGrp.add('group');
  linksSubGrp2.spacing = 2;
  var emailBtn = linksSubGrp2.add('iconbutton', undefined, emailIcon, {style: 'toolbutton'});
  emailBtn.helpTip = 'webmail globo';
  var oneDriveBtn = linksSubGrp2.add('iconbutton', undefined, oneDriveIcon, {style: 'toolbutton'});
  oneDriveBtn.helpTip = 'OneDrive globo';
  var sharePointBtn = linksSubGrp2.add('iconbutton', undefined, sharePointIcon, {style: 'toolbutton'});
  sharePointBtn.helpTip = 'SharePoint promo GNEWS';

  linksGrp.add('image', undefined, hSpacer);
 
  var linksSubGrp3 = linksGrp.add('group');
  linksSubGrp3.spacing = 2;
  var trelloBtn = linksSubGrp3.add('iconbutton', undefined, trelloIcon, {style: 'toolbutton'});
  trelloBtn.helpTip = 'trello promo GNEWS';
  var typeFormBtn = linksSubGrp3.add('iconbutton', undefined, typeFormIcon, {style: 'toolbutton'});
  typeFormBtn.helpTip = 'type form globo';
  var plannerBtn = linksSubGrp3.add('iconbutton', undefined, plannerIcon, {style: 'toolbutton'});
  plannerBtn.helpTip = 'planner globo';

  linksGrp.add('image', undefined, vSpacer);

  var linksSubGrp1 = linksGrp.add('group');
  linksSubGrp1.spacing = 2;
  var mamArteBtn = linksSubGrp1.add('iconbutton', undefined, arteFolderIcon, {style: 'toolbutton'});
  mamArteBtn.helpTip = 'MAM Para Arte';
  var mamMagBtn = linksSubGrp1.add('iconbutton', undefined, magazineFolderIcon, {style: 'toolbutton'});
  mamMagBtn.helpTip = 'upload MAM Magazine';

  linksSubGrp1.add('image', undefined, hSpacer);

  var mamHardNewsBtn = linksSubGrp1.add('iconbutton', undefined, hardNewsFolderIcon, {style: 'toolbutton'});
  mamHardNewsBtn.helpTip = 'upload MAM Hard News';
  var nUtilsBtn = linksSubGrp1.add('iconbutton', undefined, utilsFolderIcon, {style: 'toolbutton'});
  nUtilsBtn.helpTip = 'N: Utilidades';

  /*

  ---------------------------------------------------------------
  > ‚öôÔ∏è preferences tab
  ---------------------------------------------------------------

  */

  var lPrefTxt = preferencesGrp.add('statictext', undefined, 'null - adj');
  lPrefTxt.helpTip = 'ctrl and adjustment layer type';
  setTxtColor(lPrefTxt, sTxtColor);
  var lDropArray = ['shape', 'solid'];
  var lDrop = preferencesGrp.add('dropdownlist', undefined, lDropArray);
  lDrop.selection = lDropSel;

  preferencesGrp.add('image', undefined, vSpacer);

  var projPrefTxt = preferencesGrp.add('statictext', undefined, 'org. template');
  projPrefTxt.helpTip = 'project structure template';
  setTxtColor(projPrefTxt, sTxtColor);
  var projTemplateDropArray = ['PROMO', 'custom'];
  var projTemplateDrop = preferencesGrp.add('dropdownlist', undefined, projTemplateDropArray);
  projTemplateDrop.selection = projMDropSel;

  preferencesGrp.add('image', undefined, vSpacer);
  
  var artPathBtn = preferencesGrp.add('iconbutton', undefined, solTogBtn, {style: 'toolbutton'});
  artPathBtn.helpTip = 'set "para arte" folder path';
  var magPathBtn = preferencesGrp.add('iconbutton', undefined, solTogBtn, {style: 'toolbutton'});
  magPathBtn.helpTip = 'set "upload MAM-magazine" folder path';

  preferencesGrp.add('image', undefined, vSpacer);
  
  var colorPrefTxt = preferencesGrp.add('statictext', undefined, 'colors');
  colorPrefTxt.helpTip = 'ui colors';
  setTxtColor(colorPrefTxt, sTxtColor);
  var colorDrop = preferencesGrp.add('dropdownlist', undefined, grpNames);
  colorDrop.selection = 0;
  var tabColorBtn = preferencesGrp.add('iconbutton', undefined, undefined, {style: 'toolbutton'});
  tabColorBtn.size = [20, 20];
  setBtnColor(tabColorBtn, tabColors[0]);
  tabColorBtn.onDraw = customDraw;

  preferencesGrp.add('image', undefined, vSpacer);

  var resetBtn = preferencesGrp.add('iconbutton', undefined, resetIcon, {style: 'toolbutton'});
  resetBtn.helpTip = 'reset preferences';

  var updateBtn = preferencesGrp.add('iconbutton', undefined, downloadIcon, {style: 'toolbutton'});
  updateBtn.helpTip = 'download the latest script version from github';

  preferencesGrp.add('image', undefined, vSpacer);

  var aboutTxt = preferencesGrp.add('statictext', undefined, vStr);
  aboutTxt.helpTip = aboutStr;
  setTxtColor(aboutTxt, aboutTxtColor);

  /*

  ---------------------------------------------------------------
  > error tab
  ---------------------------------------------------------------

  */

  var errTxt = errTabGrp.add('statictext', undefined, '');
  errTxt.characters = 60;
  setTxtColor(errTxt, errTxtColor);

  // close group...
  var closeBtn = closeGrp.add('iconbutton', undefined, closeIcon, {style: 'toolbutton'});
  closeBtn.helpTip = 'close';
  var closeErrBtn = closeGrp.add('iconbutton', undefined, closeErrIcon, {style: 'toolbutton'});
  closeErrBtn.helpTip = 'close';
  closeErrBtn.visible = false;

  /*

  ---------------------------------------------------------------
  >  progress tab
  ---------------------------------------------------------------

  */

  var progTxt1 = progressGrp.add('statictext', undefined, '');
  progTxt1.characters = 16;
  setTxtColor(progTxt1, sTxtColor);
  var progTxt2 = progressGrp.add('statictext', undefined, '');
  progTxt2.characters = 16;
  setTxtColor(progTxt2, sTxtColor);

  // all tabs
  var tabs = [];

  for (i = 0; i < grpNames.length; i++) {

    eval('tabs.push(' + grpNames[i] + 'Grp);');
  }

  // all subgroups
  var tabSubGrps = [];
  // ctrl subgroups
  tabSubGrps.push(ctrlSubGrp1);
  // animation subgroups
  tabSubGrps.push(animationSubGrp1);
  // fx subgroups
  tabSubGrps.push(fxSubGrp1);
  tabSubGrps.push(fxSubGrp2);
  tabSubGrps.push(fxSubGrp3);
  tabSubGrps.push(fxSubGrp4);
  // layers subgroups
  tabSubGrps.push(layersSubGrp1);
  // links subgroups
  tabSubGrps.push(linksSubGrp1);
  tabSubGrps.push(linksSubGrp2);
  tabSubGrps.push(linksSubGrp3);
  // text subgroups
  tabSubGrps.push(textSubGrp1);
  tabSubGrps.push(textSubGrp2);
  // project subgroups
  tabSubGrps.push(projectSubGrp1);
  
  //
  w.layout.layout(true);

  w.onShow = function() {

    setLayout();
  };

  w.onResizing = w.onResize = function() {

    setLayout();
  };

  var grp = menuGrp;
  var bgColor = tabColors[0];
  setBgColor(bgColor);

  /*

  ---------------------------------------------------------------
  > üìü main menu events
  ---------------------------------------------------------------

  */

  ctrlBtn.onClick = function() {

    grp = ctrlGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  animBtn.onClick = function() {

    grp = animationGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  fxBtn.onClick = function() {

    grp = fxGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  txtBtn.onClick = function() {

    grp = textGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  palletBtn.onClick = function() {

    grp = palletGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  layerBtn.onClick = function() {

    grp = layersGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  toolBtn.onClick = function() {

    grp = toolsGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };
  
  projBtn.onClick = function() {
    
    projName = getXMPdata('title[1]');
    projName = (projName == '') ? 'proj name' : projName;
    projId = getXMPdata('identifier');
    projId = (projId == '') ? 'proj id' : projId;
    
    grp = projectGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
    projUserTxt.text = userPrefix;
    projIdTxt.text = projId;
    projNameTxt.text = projName;
  };

  appBtn.onClick = function() {

    grp = appGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };

  linksBtn.onClick = function() {

    grp = linksGrp;
    bgColor = tabColors[tabs.indexOf(grp)];
    openTab(grp, bgColor);
  };  

  prefBtn.onClick = function() {

    userPrefix = (userPrefix == '' || userPrefix == undefined) ? system.userName.substring(0, 3).toUpperCase() : userPrefix;
    grp = preferencesGrp;
    bgColor = prefGrpColor;
    openTab(grp, bgColor);
  };

  /*

  ---------------------------------------------------------------
  > üïπÔ∏è ctrl tab events
  ---------------------------------------------------------------

  */

  upHBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var upArray = [];
    var msg = 'comp not selected';

    if (aItem instanceof CompItem) {
      app.beginUndoGroup('select parent');

      if (selLayers.length > 0) {

        for (i = 0; i < selLayers.length; i++) {

          if (selLayers[i].parent != null) {
            upArray.push(selLayers[i].parent);
          }
        }
        if (upArray.length > 0) {

          for (i = 0; i < selLayers.length; i++) {
            selLayers[i].selected = false;
          }
          for (i = 0; i < upArray.length; i++) {

            if (upArray[i].shy && aItem.hideShyLayers) {
              upArray[i].shy = false;
            }
            upArray[i].selected = true;
          }
        }
      } else {

        try {
          aItem.layer('ctrl_comp').selected = true;

        } catch (err) {}
      }

      app.endUndoGroup();

    } else {
      showTabErr(ctrlGrp, msg);
    }
  };

  dwnHBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var dwnArray = [];
    var msg = 'comp not selected';

    if (aItem instanceof CompItem) {
      app.beginUndoGroup('select children');

      if (selLayers.length > 0) {

        for (i = 0; i < selLayers.length; i++) {

          for (l = 1; l <= aItem.numLayers; l++) {
            var lParent = aItem.layer(l).parent;

            if (lParent == selLayers[i]) {
              dwnArray.push(aItem.layer(l));
            }
          }
        }
        if (dwnArray.length > 0) {

          for (i = 0; i < selLayers.length; i++) {
            selLayers[i].selected = false;
          }
          for (i = 0; i < dwnArray.length; i++) {

            if (dwnArray[i].shy && aItem.hideShyLayers) {
              dwnArray[i].shy = false;
            }
            dwnArray[i].selected = true;
          }
        }
      } else {

        try {
          aItem.layer('ctrl_comp').selected = true;

        } catch (err) {}
      }

      app.endUndoGroup();

    } else {
      showTabErr(ctrlGrp, msg);
    }
  };

  nullShpBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var ctrlLayer;
    var msg = 'comp not selected';

    if (aItem instanceof CompItem) {
      app.beginUndoGroup('create null');

      if (selLayers.length > 0) {

        for (l = 0; l < selLayers.length; l++) {
          var selLayer = selLayers[l];

          if (lDrop.selection == 0) {
            ctrlLayer = createShp(1);

          } else {
            ctrlLayer = aItem.layers.addNull();
          }
          if (selLayer.hasTrackMatte) {
            ctrlLayer.moveBefore(aItem.layer(selLayer.index - 1));

          } else {
            ctrlLayer.moveBefore(selLayer);
          }
          var prefixArray = getPrefixes();
          var selName = selLayer.name;

          for (p = 0; p < prefixArray.length; p++) {
            selName = deletePrefix(selName, prefixArray[p]);
          }
          ctrlLayer.guideLayer = true;
          ctrlLayer.name = nullPrefix + charPrefix;
          ctrlLayer.name += replaceSpcChar(selName);

          if (ctrlLayer.name == selLayer.name) {
            var ctrlName = ctrlLayer.name;
            ctrlLayer.name = nameInc(ctrlName);
          }
          setHierarchy(selLayer, ctrlLayer);
          ctrlLayer.inPoint = selLayer.inPoint;
          ctrlLayer.outPoint = selLayer.outPoint;

          if (exprTogBtn.value) {
            cloneExpressions(selLayer, ctrlLayer);
          }
          if (aniTogBtn.value) {
            cloneKeys(selLayer, ctrlLayer);
          }
          ctrlLayer.label = 1;
        }
      } else {

        if (lDrop.selection == 0) {
          ctrlLayer = createShp(1);

        } else {
          ctrlLayer = aItem.layers.addNull();
        }
        ctrlLayer.guideLayer = true;
        ctrlLayer.name = nullPrefix + charPrefix;
        ctrlLayer.label = 1;
      }

      app.endUndoGroup();

    } else {
      showTabErr(ctrlGrp, msg);
    }
  };

  nullCShpBtn.onClick = function() {

    var posProp = 'ADBE Position';
    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var lIndex = (aItem != null) ? aItem.numLayers : 0;
    var ctrlLayer;
    var msg = 'select more than one layer';

    if (selLayers.length > 1) {

      for (i = 0; i < selLayers.length; i++) {
        selLayers[i].parent = null;

        if (selLayers[i].index < lIndex) {
          lIndex = i;
        }
      }
      app.beginUndoGroup('create centered null');

      if (lDrop.selection == 0) {
        ctrlLayer = createShp(1);

      } else {
        ctrlLayer = aItem.layers.addNull();
      }
      var ctrlPos = ctrlLayer.property(trmProp).property(posProp);

      ctrlLayer.guideLayer = true;
      ctrlLayer.name = nullPrefix + charPrefix;
      ctrlLayer.name += 'center';
      ctrlPos.setValue(findCenter(selLayers));
      ctrlLayer.moveBefore(selLayers[lIndex]);

      for (i = 0; i < selLayers.length; i++) {
        selLayers[i].parent = ctrlLayer;
      }
      ctrlLayer.label = 1;

      app.endUndoGroup();

    } else {
      showTabErr(ctrlGrp, msg);
    }
  };

  /*

  ---------------------------------------------------------------
  > üî• fx tab events
  ---------------------------------------------------------------

  */

  shpAdjBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayer = (aItem != null) ? aItem.selectedLayers[0] : null;
    var adjLayer;
    var msg = 'comp not selected';

    if (aItem instanceof CompItem) {
      app.beginUndoGroup('create adj layer');

      var adjC = rgb(255, 255, 255);
      var adjW = aItem.width;
      var adjH = aItem.height;

      if (lDrop.selection == 0) {
        adjLayer = createShp(0);

      } else {
        adjLayer = aItem.layers.addSolid(adjC, '', adjW, adjH, 1.0);
      }
      if (selLayer != null) {
        adjLayer.moveBefore(selLayer);
        adjLayer.inPoint = selLayer.inPoint;
        adjLayer.outPoint = selLayer.outPoint;
      }
      adjLayer.name = adjPrefix + charPrefix;
      adjLayer.adjustmentLayer = true;
      adjLayer.label = 5;

      if (adjLayer instanceof AVLayer) {
        var expStr = scaleToCompSize();
        adjLayer.property(trmProp).property('ADBE Scale').expression = expStr;
      }
      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  curBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE CurvesCustom';

    if (selLayers.length > 0) {
      app.beginUndoGroup('curves');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  levBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Pro Levels2';

    if (selLayers.length > 0) {
      app.beginUndoGroup('levels');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  lumBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Lumetri';

    if (selLayers.length > 0) {
      app.beginUndoGroup('lumetri color');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  gaublurBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Gaussian Blur 2';

    if (selLayers.length > 0) {
      app.beginUndoGroup('gaussian blur');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  comblurBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Compound Blur';

    if (selLayers.length > 0) {
      app.beginUndoGroup('compound blur');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  lensblurBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Camera Lens Blur';

    if (selLayers.length > 0) {
      app.beginUndoGroup('lens blur');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  fillBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('fill');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
        effect.property(3).setValue(randomColor()); // color
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  fracBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var fxName = 'ADBE Fractal Noise';

    if (selLayers.length > 0) {
      app.beginUndoGroup('fractal noise');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      var msg = 'layer not selected';
      showTabErr(fxGrp, msg);
    }
  };

  grainBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'VISINF Grain Implant';

    if (selLayers.length > 0) {
      app.beginUndoGroup('add grain');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  glassBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE 3D Glasses2';

    if (selLayers.length > 0) {
      app.beginUndoGroup('3d glasses');

      for (i = 0; i < selLayers.length; i++) {
        var effect = selLayers[i].property(fxProp).addProperty(fxName);
        effect.property(1).setValue(selLayers[i].index); // left view
        effect.property(2).setValue(selLayers[i].index); // right view
        effect.property(7).setValue(12); // 3d view
      }

      app.endUndoGroup();

    } else {
      showTabErr(fxGrp, msg);
    }
  };

  /*
  
  ---------------------------------------------------------------
  > üö∂ animation tab events
  ---------------------------------------------------------------
  
  */
  
  copyInfBtn.onClick = function() {
  
    alert(wip);
  };
  
  pasteInfBtn.onClick = function() {
  
    alert(wip);
  };
  
  typeAnimBtn.onClick = function() {
  
    alert(wip);
  };

  /*

  ---------------------------------------------------------------
  > pallet tab events
  ---------------------------------------------------------------

  */

  redBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('red fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.725, 0.078, 0.078, 1];';
        palletFill.name = 'GNEWS red';
        palletFill.property('Color').setValue(GNEWS_RED);
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  blkBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('black fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.078, 0.078, 0.078, 1];';
        palletFill.name = 'GNEWS black';
        palletFill.property('Color').setValue(GNEWS_BLK);
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  wteBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('white fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.917, 0.917, 0.917, 1]';
        palletFill.name = 'GNEWS white';
        palletFill.property('Color').setValue(GNEWS_WTE);
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  gryBtn1.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('white fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.705, 0.705, 0.705, 1]';
        palletFill.name = 'GNEWS gray 1';
        palletFill.property('Color').setValue(rgb(180, 180, 180));
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  gryBtn2.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('white fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.431, 0.431, 0.431, 1]';
        palletFill.name = 'GNEWS gray 2';
        palletFill.property('Color').setValue(rgb(110, 110, 110));
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  gryBtn3.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';
    var fxName = 'ADBE Fill';

    if (selLayers.length > 0) {
      app.beginUndoGroup('white fill');

      for (i = 0; i < selLayers.length; i++) {
        var palletFill = selLayers[i].property(fxProp).addProperty(fxName);
        var expStr = '[0.211, 0.211, 0.211, 1]';
        palletFill.name = 'GNEWS gray 3';
        palletFill.property('Color').setValue(rgb(54, 54, 54));
        palletFill.property('Color').expression = expStr;
      }

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  shpPalletBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('pallet');

      var palletLayer = colorPallet();

      palletLayer.name = 'pallet - GNEWS';
      palletLayer.guideLayer = true;
      palletLayer.locked = true;
      palletLayer.property('ADBE Transform Group').position.setValue([0,0]);
      palletLayer.property('ADBE Transform Group').position.expression('[0,0]');

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  logoBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('pallet');

      logoShp();

      app.endUndoGroup();

    } else {
      showTabErr(palletGrp, msg);
    }
  };

  /*

  ---------------------------------------------------------------
  > text tab events
  ---------------------------------------------------------------

  */

  txtUpperBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'no text layer is selected';

    if (selLayers.length > 0) {
      app.beginUndoGroup('text to upper case');

      for (i = 0; i < selLayers.length; i++) {
        setTxtCase(selLayers[i], 0);
      }

      app.endUndoGroup();

    } else {
      showTabErr(textGrp, msg);
    }
  };

  txtLowerBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'no text layer is selected';

    if (selLayers.length > 0) {
      app.beginUndoGroup('text to lower case');

      for (i = 0; i < selLayers.length; i++) {
        setTxtCase(selLayers[i], 1);
      }

      app.endUndoGroup();

    } else {
      showTabErr(textGrp, msg);
    }
  };

  txtTitleBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'no text layer is selected';

    if (selLayers.length > 0) {

      app.beginUndoGroup('text to title case');

      for (i = 0; i < selLayers.length; i++) {
        setTxtCase(selLayers[i], 2);
      }

      app.endUndoGroup();

    } else {
      showTabErr(textGrp, msg);
    }
  };

  txtCleanerBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'no text layer is selected';

    if (selLayers.length > 0) {

      app.beginUndoGroup('text to title case');

      for (i = 0; i < selLayers.length; i++) {
        cleanText(selLayers[i]);
      }

      app.endUndoGroup();

    } else {
      showTabErr(textGrp, msg);
    }
  };
  
  txtColumnBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'no text layer is selected';

    if (selLayers.length > 0) {

      app.beginUndoGroup('break text columns');

      for (i = 0; i < selLayers.length; i++) {
        
        var selLayer = selLayers[i];
        var colN = 2;
        var colPos = selLayer.position.value;
        var col = columnText(selLayer, colN);

        // alert(col);

        if (col.length >= colN) {
          
          selLayer.enabled = false;
          col[0].position.setValue(colPos);
 
          for (c = 1; c < col.length; c++) {

            var exp = '[parent.sourceRectAtTime().width + 100, 0];';
            
            col[c].parent = col[c-1];
            col[c].position.expression = exp;
            var cPos = col[c].position.value;
            col[c].position.expression = '';
            col[c].position.setValue(cPos);
            col[c].parent = null;
          }
         
        }
      }

      app.endUndoGroup();

    } else {
      showTabErr(textGrp, msg);
    }
  };
  
  limitSld.onChanging = function() {

    limitTxt.text = parseInt(limitSld.value);
    limitTxt2.text = parseInt(limitSld.value);
  };

  limitTxt2.onChanging = function() {

    limitTxt.text = parseInt(limitTxt2.text);
    limitSld.value = parseInt(limitTxt2.text);
  };

  limitSld.onChange = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];

    if (aItem != null) {
      app.beginUndoGroup('break text');

      for (i = 0; i < selLayers.length; i++) {
        lineBreak(selLayers[i], Number(limitTxt.text));
      }

      app.endUndoGroup();
    }
  };

  limitTxt2.onChange = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];

    if (aItem != null) {
      app.beginUndoGroup('break text');

      for (i = 0; i < selLayers.length; i++) {
        lineBreak(selLayers[i], Number(limitTxt.text));
      }

      app.endUndoGroup();
    }
  };

  /*

  ---------------------------------------------------------------
  > üßª layer tab events
  ---------------------------------------------------------------

  */

  renameLayersBtn.onClick = function() {

    var iArray = getComps();
    var assArray = iArray[0];
    var aItem = app.project.activeItem;
    var compArray = [aItem];
    var msg = 'comp not selected';

    if (aItem instanceof CompItem) {

      for (i = 0; i < assArray.length; i++) {

        if (assArray[i] == aItem) {
          compArray = [];
        }
      }
      app.beginUndoGroup('update names');

      renameLayers(compArray);

      app.endUndoGroup();

    } else {
      showTabErr(projectGrp, msg);
    }
  };

  isolateBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];

    if (aItem instanceof CompItem && selLayers.length > 0) {
      app.beginUndoGroup('isolate layers');

      for (i = 1; i <= aItem.numLayers; i++) {
        var l = aItem.layer(i);

        l.shy = true;
      }
      
      for (i = 0; i < selLayers.length; i++) {
        var sl = selLayers[i];

        sl.shy = false;
      }

      aItem.hideShyLayers = !aItem.hideShyLayers;

      app.endUndoGroup();
    }
  };

  lockTrmBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var msg = 'layer not selected';

    if (selLayers.length > 0) {
      app.beginUndoGroup('lock transform properties');

      for (i = 0; i < selLayers.length; i++) {
        lockTrmProp(selLayers[i]);
      }

      app.endUndoGroup();

    } else {
      showTabErr(layersGrp, msg);
    }
  };

  /*

  ---------------------------------------------------------------
  > üî® tools tab events
  ---------------------------------------------------------------

  */

  arrowBtn.onClick = function() {

    var aItem = app.project.activeItem;
    msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('arrow rig');

      var expFx = arrow();
    
      var bodyShape = new Shape();
      bodyShape.vertices = [[0, 0],[80, 0],[80, -250],[160, -250]];
      bodyShape.inTangents = [[0, 0],[0, 0],[0, 0],[0, 0]];
      bodyShape.outTangents = [[0, 0],[0, 0],[0, 0],[0, 0]];
      bodyShape.closed = false;

      var headShape = new Shape();
      headShape.vertices = [[-10, -10],[0, 0],[-10, 10]];
      headShape.inTangents = [[0, 0],[0, 0],[0, 0]];
      headShape.outTangents = [[0, 0],[0, 0],[0, 0]];
      headShape.closed = false;

      var shpLayer = shpArrow(bodyShape, headShape);
      addPseudoEffect(shpLayer, 'ARROW', 'arrow', expFx);
      shpLayer.name = 'arrow';
      app.endUndoGroup();

    } else {
      showTabErr(toolsGrp, msg);
    }
  };

  counterBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var cntLayer;
    var srcTxt;
    var aniTxt;
    var aniTxtProp;
    var colorTxt;
    var cnt = counter();
    var expFx = cnt[0];
    var expStr1 = cnt[1];
    var expStr2 = cnt[2];
    msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('counter rig');

      if (selLayers.length > 0) {

        for (i = 0; i < selLayers.length; i++) {

          if (selLayers[i] instanceof TextLayer) {
            cntLayer = selLayers[i];
            srcTxt = cntLayer.property(txtProp).property(txtDoc);
            aniTxt = cntLayer.property(txtProp).property('ADBE Text Animators');
            aniTxt = aniTxt.addProperty('ADBE Text Animator');
            aniTxtProp = aniTxt.property('ADBE Text Animator Properties');
            colorTxt = aniTxtProp.addProperty('ADBE Text Fill Color');

            aniTxt.name = 'counter color';
            addPseudoEffect(cntLayer, 'COUNTER', 'counter', expFx);
            srcTxt.expression = expStr1;
            colorTxt.expression = expStr2;
          }
        }
      } else {
        cntLayer = aItem.layers.addText();
        srcTxt = cntLayer.property(txtProp).property(txtDoc);

        srcTxt.setValue('counter');
        cntLayer.name = 'txt_counter';
        aniTxt = cntLayer.property(txtProp).property('ADBE Text Animators');
        aniTxt = aniTxt.addProperty('ADBE Text Animator');
        aniTxtProp = aniTxt.property('ADBE Text Animator Properties');
        colorTxt = aniTxtProp.addProperty('ADBE Text Fill Color');

        aniTxt.name = 'counter color';
        addPseudoEffect(cntLayer, 'COUNTER', 'counter', expFx);
        srcTxt.expression = expStr1;
        colorTxt.expression = expStr2;
      }

      app.endUndoGroup();

    } else {
      showTabErr(toolsGrp, msg);
    }
  };

  wigBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    var wLayer;
    var wProp;
    var w = wig();
    var expFx = w[0];
    var expStr = w[1];
    msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('wig rig');

      if (selLayers.length > 0) {

        for (i = 0; i < selLayers.length; i++) {
          wLayer = selLayers[i];
          wProp = wLayer.property(trmProp).property('ADBE Position');

          addPseudoEffect(wLayer, 'WIG', 'wig', expFx);
          wProp.expression = expStr;
        }
      } else {
        msg = 'layer not selected';
        showTabErr(toolsGrp, msg);
      }

      app.endUndoGroup();

    } else {
      showTabErr(toolsGrp, msg);
    }
  };

  ikBtn.onClick = function() {

    var aItem = app.project.activeItem;
    var selLayers = (aItem != null) ? aItem.selectedLayers : [];
    msg = 'comp not selected';

    if (aItem != null) {
      app.beginUndoGroup('simple ik');

      if (selLayers.length == 3) {

        var bone1 = selLayers[0];
        var bone2 = selLayers[1];
        var bone3 = selLayers[2];

        bone2.parent = bone1;
        bone3.parent = bone2;

        var bone1Pos = bone1.property(trmProp).property('ADBE Position').value;
        var bone1Rot = bone1.property(trmProp).property('ADBE Rotate Z').value;
        var bone3Pos = bone3.property(trmProp).property('ADBE Position').value;
        var k = ik(bone1.name, bone2.name, bone3.name);
        var expFx = k[0];
        var expStr1 = k[1];
        var expStr2 = k[2];
        var expStr3 = k[3];
        var expStr4 = k[4];

        zeroLayer = aItem.layers.addShape();

        if (lDrop.selection == 0) {
          ctrlLayer = createShp(1);

        } else {
          ctrlLayer = aItem.layers.addNull();
        }
        zeroLayer.moveBefore(bone3);
        zeroLayer.name = bone2.name + ' end';
        zeroLayer.guideLayer = true;
        zeroLayer.label = 2;
        zeroLayer.parent = bone3.parent;
        zeroLayer.property(trmProp).property('ADBE Position').setValue(bone3Pos);
        zeroLayer.locked = true;
        zeroLayer.shy = true;

        ctrlLayer.moveBefore(bone3);
        ctrlLayer.name = ctrlPrefix + charPrefix + bone3.name;
        ctrlLayer.guideLayer = true;
        ctrlLayer.label = 1;
        ctrlLayer.parent = bone3.parent;
        ctrlLayer.property(trmProp).property('ADBE Position').setValue(bone3Pos);
        ctrlLayer.parent = bone1.parent;
        ctrlLayer.parent = null;

        bone3.parent = null;

        addPseudoEffect(ctrlLayer, 'SIMPLE_IK', 'simple IK', expFx);
        bone1.property(trmProp).property('ADBE Rotate Z').expression = expStr1;
        bone2.property(trmProp).property('ADBE Rotate Z').expression = expStr2;
        bone3.property(trmProp).property('ADBE Position').expression = expStr3;
        bone3.property(trmProp).property('ADBE Rotate Z').expression = expStr4;

        if (bone1.property(trmProp).property('ADBE Rotate Z').value != bone1Rot) {
          ctrlLayer.property(fxProp).property('simple IK').property('flip orientation').setValue(true);
        }
      } else {
        msg = 'select 3 layers in order';
        showTabErr(toolsGrp, msg);
      }

      app.endUndoGroup();

    } else {
      showTabErr(toolsGrp, msg);
    }
  };

  /*

  ---------------------------------------------------------------
  > üóÉÔ∏è project tab events
  ---------------------------------------------------------------

  */

  projUserTxt.onChange = function() {

    userPrefix = projUserTxt.text.toUpperCase();
    saveGPrefs();
  };

  insertUserIdBtn.onClick = function() {

    userPrefix = replaceSpcChar(projUserTxt.text.toUpperCase());
    projId = replaceSpcChar(projIdTxt.text.toUpperCase());
    projUserTxt.text = userPrefix;
    projIdTxt.text = projId;

    var msg = 'empty project';
    var sysDate = system.callSystem('cmd.exe /c date /t');
    var dateStr = sysDate.substring(0, sysDate.length-3);
    var baseName = userPrefix + ' PROMO - ' + projId;
    var itemArray = [];

    if (app.project.numItems > 0) {
      app.beginUndoGroup('quick rename ID');

      for (k = 1; k <= app.project.numItems; k++) {
        var aItem = app.project.item(k);

        if (aItem.selected == true && aItem instanceof CompItem) {
          itemArray.push(aItem);
        }
      }
      for (c = 0; c < itemArray.length; c++) {
        var qItem = itemArray[c];
        qItem.name = qItem.name.replace(compPrefix + charPrefix, '');
        qItem.name = qItem.name.replace(/^.*\w{3}\d{6}[\s\_]*/,'');
        qItem.name = replaceSpcChar(qItem.name);
        qItem.name = baseName + ' ' + qItem.name;

        if (qItem.comment == '') {
          qItem.comment = 'export: true';
        }
      }

      app.endUndoGroup();
    } else {
      showTabErr(projectGrp, msg);
    }
  };

  renameItemBtn.onClick = function() {

    userPrefix = replaceSpcChar(projUserTxt.text.toUpperCase());
    projId = replaceSpcChar(projIdTxt.text.toUpperCase());
    projName = replaceSpcChar(projNameTxt.text.toLowerCase());
    projUserTxt.text = userPrefix;
    projIdTxt.text = projId;
    projNameTxt.text = projName;

    var msg = 'empty project';
    var sysDate = system.callSystem('cmd.exe /c date /t');
    var dateStr = sysDate.substring(0, sysDate.length-3);

    if (app.project.numItems > 0) {
      app.beginUndoGroup('quick rename');

      renameComps(projId, projName, getComps());
      setXMPdata('creator', system.userName);
      setXMPdata('date', dateStr);
      setXMPdata('identifier', projId);
      setXMPdata('title', projName);

      app.endUndoGroup();
    } else {
      showTabErr(projectGrp, msg);
    }
  };

  projOrgBtn.onClick = function() {

    if (app.project.numItems > 0) {
      app.beginUndoGroup('quick project organization');

      emptyFolders();
      populateFolders();
      deleteEmptyFolders();

      app.endUndoGroup();
    }
  };

  saveBtn.onClick = function() {

    userPrefix = replaceSpcChar(projUserTxt.text.toUpperCase());
    projId = replaceSpcChar(projIdTxt.text.toUpperCase());
    projName = replaceSpcChar(projNameTxt.text.toLowerCase());
    projUserTxt.text = userPrefix;
    projIdTxt.text = projId;
    projNameTxt.text = projName;

    var msg = 'it\'s working...';

    showTabProg(grp, msg);

    var saveFolder = Folder.selectDialog();
    var userStr = system.userName;
    var sysDate = system.callSystem('cmd.exe /c date /t');
    var dateStr = sysDate.substring(0, sysDate.length-3);

    setXMPdata('creator', userStr);
    setXMPdata('date', dateStr);
    setXMPdata('identifier', projId);
    setXMPdata('title', projName);

    app.beginUndoGroup('quick save');

    if (saveFolder != null) {
      var savePath = saveFolder.fullName + '/';
      var projFolder = saveFolder;
      var projPath = savePath;
      var projFullName = projId + ' ' + projName;
      var projFile =  new File(projPath + projFullName);

      if (collectTogBtn.value) {

        // app.executeCommand(2482); // collect files...
        try {
          
          projPath = saveFolder.fullName + '/' + projFullName + '/';
          projFolder = new Folder(projPath);
          projFile = new File(projPath + projFullName);
  
          projFolder.create();
          filesCollect(projPath);
        } catch (error) {}
      }
      if (collectFontsTogBtn.value) {

        try {
          
          fontCollect(projPath);
        } catch (error) {}
      }
      app.project.save(projFile);
      openFolder(projPath);
    }
    openTab(grp, bgColor);

    app.endUndoGroup();
  };

  /*
  
  ---------------------------------------------------------------
  > ‚úåÔ∏è app tab events
  ---------------------------------------------------------------
  
  */
  
  copyAMEPresetsBtn.onClick = function() {

    var msg = 'black magic  („Å§ ‚óï_‚óï )„Å§';
    var url = 'https://raw.githubusercontent.com/jmbillard/PROMO-GNEWS-script/main/AME/';
    var url1 = url + 'Apple%20ProRes%20444%20RGBA.epr';
    var url2 = url + 'H264%20-%20mp4%20alta.epr';
    var url3 = url + 'H264%20-%20mp4%20baixa.epr';
    var url4 = url + 'WAV%20-%20audio%20GSAT.epr';
    var url5 = url + 'XDCAM%20HD%2050%20NTSC%2060i%20-%20avid.epr';

    var downPath = scriptPreferencesPath + '/AME presets';
    var dowFolder = new Folder(downPath);
    var amePath = '~/Documents/Adobe/Adobe Media Encoder';
    var ameFolder = new Folder(amePath);
    var vFolders = ameFolder.getFiles();

    if (!dowFolder.exists) {

      dowFolder.create();
    }
    getURLContent(url1, downPath);
    getURLContent(url2, downPath);
    getURLContent(url3, downPath);
    getURLContent(url4, downPath);
    getURLContent(url5, downPath);

    for (i = 0; i < vFolders.length; i++) {

      var presetsPath = decodeURI(vFolders[i]).toString() + '/Presets';
      try {
      
        copyFolderContent(downPath, presetsPath);
      } catch (error) {}
    }
  };

  /*
  
  ---------------------------------------------------------------
  > üîó links tab events
  ---------------------------------------------------------------
  
  */
 
  emailBtn.onClick = function() {
    
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://outlook.office365.com/mail/';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };
 
  oneDriveBtn.onClick = function() {
    
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://tvglobocorp-my.sharepoint.com/';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };
  
  sharePointBtn.onClick = function() {
    
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://tvglobocorp.sharepoint.com/sites/IlhadeEdioPromo_GNews/Documentos%20Compartilhados/Forms/AllItems.aspx';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };
  
  trelloBtn.onClick = function() {

    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://trello.com/promo126/home';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  typeFormBtn.onClick = function() {

    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://tvglobo.typeform.com/to/wiqX4z0X';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  plannerBtn.onClick = function() {

    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access Network\"';
    var site = 'https://tasks.office.com/tvglobocorp.onmicrosoft.com/en-US/Home/Planner/#/userboard';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openWebSite(site);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  mamHardNewsBtn.onClick = function() {
  
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var folderPath = '\\\\192.168.3.10\\';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openFolder(folderPath);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  mamMagBtn.onClick = function() {
  
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var folderPath = magPath;
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openFolder(folderPath);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  mamArteBtn.onClick = function() {
  
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var folderPath = artePath;
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openFolder(folderPath);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  nUtilsBtn.onClick = function() {
  
    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var folderPath = '\\\\192.168.3.10\\';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {
      openFolder(folderPath);

    } else {
      showTabErr(linksGrp, msg);
    }
  };

  /*

  ---------------------------------------------------------------
  > ‚öôÔ∏è preferences tab events
  ---------------------------------------------------------------

  */

  lDrop.onChange = function() {

    lDropSel = lDrop.selection.index;
    saveGPrefs();
  };

  projTemplateDrop.onChange = function() {

    projMDropSel = projTemplateDrop.selection.index;
    saveGPrefs();
  };

  artPathBtn.onClick = function() {

    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {

      var saveFolder = Folder.selectDialog();
  
      if (saveFolder != null) {
  
        artePath = decodeURI(saveFolder).toString();
        saveGPrefs();
      }
    } else {
      showTabErr(preferencesGrp, msg);
    }
  };

  magPathBtn.onClick = function() {

    var prefSection = 'Main Pref Section';
    var prefName = 'Pref_SCRIPTING_FILE_NETWORK_SECURITY';
    var configName = '\"Allow Scripts to Write Files and Access the Network\"';
    var msg = configName + ' not checked';

    if (app.preferences.getPrefAsLong(prefSection, prefName)) {

      var saveFolder = Folder.selectDialog();
  
      if (saveFolder != null) {
  
        magPath = decodeURI(saveFolder).toString();
        saveGPrefs();
      }
    } else {
      showTabErr(preferencesGrp, msg);
    }
  };

  colorDrop.onChange = function() {

    var c = tabColors[colorDrop.selection.index];
    setBtnColor(tabColorBtn, c);
    tabColorBtn.notify("onDraw");
  };

  tabColorBtn.onClick = function() {

    var c = tabColors[colorDrop.selection.index];
    var binColor = eval(rgbToHex(c));
    var configColor = $.colorPicker(binColor);

    if (configColor != -1) {
      configColor = rgbStr(configColor);
      setBtnColor(tabColorBtn, eval(configColor));
      tabColors[colorDrop.selection.index] = eval(configColor);
      saveGPrefs();
    }
  };

  resetBtn.onClick = function functionName() {

    loadDefaultPrefs();
    saveGPrefs();

    var c = tabColors[colorDrop.selection.index];

    setBgColor(prefGrpColor);
    setBtnColor(tabColorBtn, c);
    tabColorBtn.notify("onDraw");
  };

  updateBtn.onClick = function() {
  
    var msg = 'black magic  („Å§ ‚óï_‚óï )„Å§';
    showTabProg(grp, msg);

    var url = 'https://raw.githubusercontent.com/jmbillard/PROMO-GNEWS-script/main/';    
    var url1 = url + 'JSON%20lib.jsxinc';
    var url2 = url + 'PROMO%20GNEWS%20exp.jsxinc';
    var url3 = url + 'PROMO%20GNEWS%20img.jsxinc';
    var url4 = url + 'PROMO%20GNEWS%20src.jsxinc';
    var url5 = url + 'PROMO%20GNEWS%20ui.jsxinc';
    var url6 = url + 'PROMO%20GNEWS.jsx';

    var urlArray = [];
    urlArray.push(url1);
    urlArray.push(url2);
    urlArray.push(url3);
    urlArray.push(url4);
    urlArray.push(url5);
    urlArray.push(url6);

    var downPath = scriptPreferencesPath + '/ScriptUI Panels';
    var dowFolder = new Folder(downPath);
    var scriptUIPath = new File($.fileName).path;

    if (!dowFolder.exists) {

      dowFolder.create();
    }
  
    getURLContent(urlArray, downPath);

    try {
      
      copyFolderContent(downPath, scriptUIPath);
      msg = 'and run the script  „ÉΩ(‚úøÔæü‚ñΩÔæü)„Éé';
    } catch (error) {
      
      msg = 'you have to manually copy all files to:\n';
      msg += '\'\\Support Files\\Scripts\\ScriptUI Panels\' folder';
      alert(msg);
      openFolder(downPath);
      openFolder(scriptUIPath);
      msg = 'and copy the files  („Å§ ‚óï_‚óï )„Å§';
    }

    showTabProg(grp, msg);
  };

  /*

  ---------------------------------------------------------------
  > close group events
  ---------------------------------------------------------------

  */

  closeBtn.onClick = function() {

    GNEWS_LOGO.visible = true;
    closeBtn.visible = true;
    prefGrp.visible = true;
    closeErrBtn.visible = false;
    menuGrp.visible = true;
    grp = mainGrp;
    bgColor = tabColors[0];
    errImgGrp.visible = false;

    allGrpGone();
    setBgColor(bgColor);
  };

  closeErrBtn.onClick = function() {

    GNEWS_LOGO.visible = true;
    closeBtn.visible = true;
    closeErrBtn.visible = false;
    errImgGrp.visible = false;
  
    clearOutput();
    allGrpGone();
    openTab(grp, bgColor);
  };

  return w;
}
